import { Scenes, Markup } from 'telegraf';
import { ClientRepository } from '../repositories/clientRepository';
import { getMainMenuUser, getMainMenuGuest } from '../menu';

const profileEnter = async (ctx: Scenes.WizardContext) => {
  const telegramId = ctx.from?.id ? String(ctx.from.id) : '';
  if (!telegramId) {
    await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å Telegram ID.');
    return ctx.scene.leave();
  }
  const client = await ClientRepository.get(telegramId);
  if (!Array.isArray(client) || client.length === 0) {
    await ctx.reply('–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ù–∞–∂–º–∏—Ç–µ ¬´–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è¬ª –≤ –º–µ–Ω—é.');
    return ctx.scene.leave();
  }
  const info = client[0];
  const enableInvoice = String(process.env.CREATE_INVOICE || '').toLowerCase() === 'true';
  const rows: string[][] = [
    [ '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å' ],
  ];
  if (enableInvoice) {
    rows.push([ 'üßæ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã' ]);
  }
  rows.push([ 'üìç –ò–∑–º–µ–Ω–∏—Ç—å –ê–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ –°–¥–µ–∫' ]);
  rows.push([ 'üîô –ù–∞–∑–∞–¥' ]);
  const lines: string[] = [
    '–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:',
    `–ò–º—è: ${info.name}`,
    `–¢–µ–ª–µ—Ñ–æ–Ω: ${info.phone}`,
    `–ê–¥—Ä–µ—Å –°–¥–µ–∫: ${String(info.address || '').trim() || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`,
  ];
  if (enableInvoice) {
    lines.push(
      '',
      '–†–µ–∫–≤–∏–∑–∏—Ç—ã –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:',
      `–ò–ù–ù: ${String((info as any).org_inn || '').trim() || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`,
      `–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: ${String((info as any).org_title || '').trim() || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`,
      `–û–ì–†–ù: ${String((info as any).org_ogrn || '').trim() || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`,
      `–Æ—Ä.–∞–¥—Ä–µ—Å: ${String((info as any).org_address || '').trim() || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`,
    );
  }
  await ctx.reply(lines.join('\n'), Markup.keyboard(rows).resize());
  return ctx.wizard.next();
};

const profileHandle = async (ctx: Scenes.WizardContext) => {
  if (!ctx.message || !('text' in ctx.message)) return;
  const text = ctx.message.text;
  const telegramId = ctx.from?.id ? String(ctx.from.id) : '';

  if (['–£–¥–∞–ª–∏—Ç—å', 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å'].includes(text)) {
    const client = await ClientRepository.get(telegramId);
    if (!Array.isArray(client) || client.length === 0) {
      await ctx.reply('–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.');
      return ctx.scene.leave();
    }
    const info = client[0];
    await ctx.reply(
      `–í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å:\n–ò–º—è: ${info.name}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${info.phone}\n\n–£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑—ã –∏ –∏—Å—Ç–æ—Ä–∏—é –ø–æ–∏—Å–∫–∞ –≤–º–µ—Å—Ç–µ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º?`,
      Markup.keyboard([[ '–£–¥–∞–ª–∏—Ç—å –≤—Å—ë', '–£–¥–∞–ª–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–∏–ª—å' ], [ '–û—Ç–º–µ–Ω–∞', 'üîô –ù–∞–∑–∞–¥' ]]).resize()
    );
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —à–∞–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
    // @ts-ignore
    ctx.wizard.selectStep(4);
    return;
  }

  if (['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å', '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å'].includes(text)) {
    await ctx.reply(
      '–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è, –∑–∞—Ç–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏.\n–ù–∞–ø—Ä–∏–º–µ—Ä:\n–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤\n+79990000000',
      Markup.keyboard([[ '‚úñÔ∏è –û—Ç–º–µ–Ω–∞' ]]).resize()
    );
    return ctx.wizard.next();
  }

  if (String(process.env.CREATE_INVOICE || '').toLowerCase() === 'true' && ['–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã', 'üßæ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç—ã'].includes(text)) {
    await ctx.reply(
      '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n–ò–ù–ù\n–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏\n–û–ì–†–ù\n–Æ—Ä.–∞–¥—Ä–µ—Å',
      Markup.keyboard([[ '‚úñÔ∏è –û—Ç–º–µ–Ω–∞' ]]).resize()
    );
    // @ts-ignore
    ctx.wizard.selectStep(6);
    return;
  }

  if (['–ò–∑–º–µ–Ω–∏—Ç—å –ê–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ –°–¥–µ–∫', 'üìç –ò–∑–º–µ–Ω–∏—Ç—å –ê–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∫–∏ –°–¥–µ–∫'].includes(text)) {
    await ctx.reply('–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –∞–¥—Ä–µ—Å –ø—É–Ω–∫—Ç–∞ –°–¥–µ–∫:', Markup.keyboard([[ '‚úñÔ∏è –û—Ç–º–µ–Ω–∞' ]]).resize());
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —à–∞–≥ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–¥—Ä–µ—Å–∞ (—Å–º. —Å–ø–∏—Å–æ–∫ —à–∞–≥–æ–≤ –≤–Ω–∏–∑—É)
    // @ts-ignore
    ctx.wizard.selectStep(5);
    return;
  }

  if (['–ù–∞–∑–∞–¥', 'üîô –ù–∞–∑–∞–¥'].includes(text)) {
    await ctx.reply('–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –º–µ–Ω—é.', await getMainMenuUser());
    return ctx.scene.leave();
  }
};

const profileDeleteConfirm = async (ctx: Scenes.WizardContext) => {
  if (!ctx.message || !('text' in ctx.message)) return;
  const text = ctx.message.text;
  const telegramId = ctx.from?.id ? String(ctx.from.id) : '';

  if (text === '–£–¥–∞–ª–∏—Ç—å –≤—Å—ë' || text === '–£–¥–∞–ª–∏—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–æ—Ñ–∏–ª—å') {
    // –ï—Å–ª–∏ –≤—ã–±—Ä–∞–ª–∏ —É–¥–∞–ª–∏—Ç—å –≤—Å—ë ‚Äî —á–∏—Å—Ç–∏–º –∑–∞–∫–∞–∑—ã –∏ –∏—Å—Ç–æ—Ä–∏—é
    if (text === '–£–¥–∞–ª–∏—Ç—å –≤—Å—ë') {
      try {
        const { OrderRepository } = await import('../repositories/orderRepository');
        const { SearchHistoryRepository } = await import('../repositories/searchHistoryRepository');
        await OrderRepository.deleteAllByTelegramId(telegramId);
        await SearchHistoryRepository.clear(telegramId);
      } catch (e) { /* ignore */ }
    }
    const result = await ClientRepository.delete(telegramId);
    await ctx.reply(result.message, await getMainMenuGuest());
    return ctx.scene.leave();
  }

  if (['–û—Ç–º–µ–Ω–∞', '‚úñÔ∏è –û—Ç–º–µ–Ω–∞'].includes(text) || text === '–ù–∞–∑–∞–¥') {
    await ctx.reply('–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.', await getMainMenuUser());
    return ctx.scene.leave();
  }
};

const profileEdit = async (ctx: Scenes.WizardContext) => {
  if (!ctx.message || !('text' in ctx.message)) return;
  const rawText = (ctx.message.text || '').trim();

  if (['–û—Ç–º–µ–Ω–∞', '‚úñÔ∏è –û—Ç–º–µ–Ω–∞'].includes(rawText) || rawText === '–ù–∞–∑–∞–¥') {
    await ctx.reply('–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.', await getMainMenuUser());
    return ctx.scene.leave();
  }

  const payload = rawText.split('\n').map((s) => s.trim()).filter(Boolean);

  if (payload.length < 2) {
    await ctx.reply(
      '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏.\n–ù–∞–ø—Ä–∏–º–µ—Ä:\n–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤\n+79990000000',
      Markup.keyboard([[ '‚úñÔ∏è –û—Ç–º–µ–Ω–∞' ]]).resize()
    );
    return; // –æ—Å—Ç–∞—ë–º—Å—è –Ω–∞ —Ç–µ–∫—É—â–µ–º —à–∞–≥–µ
  }

  const [name, phone] = payload;
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  // @ts-ignore
  ctx.wizard.state.tempName = name;
  // @ts-ignore
  ctx.wizard.state.tempPhone = phone;

  await ctx.reply(
    `–í—ã –≤–≤–µ–ª–∏ –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:\n–ò–º—è: ${name}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${phone}\n\n–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è?`,
    Markup.keyboard([[ 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å', '‚úñÔ∏è –û—Ç–º–µ–Ω–∞' ]]).resize()
  );
  return ctx.wizard.next();
};

const profileEditConfirm = async (ctx: Scenes.WizardContext) => {
  if (!ctx.message || !('text' in ctx.message)) return;
  const text = ctx.message.text;
  const telegramId = ctx.from?.id ? String(ctx.from.id) : '';

  if (text === '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å' || text === 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å') {
    // @ts-ignore
    const name = ctx.wizard.state.tempName as string;
    // @ts-ignore
    const phone = ctx.wizard.state.tempPhone as string;
    const result = await ClientRepository.update(telegramId, { name, phone });
    await ctx.reply(result.message, await getMainMenuUser());
    return ctx.scene.leave();
  }

  if (['–û—Ç–º–µ–Ω–∞', '‚úñÔ∏è –û—Ç–º–µ–Ω–∞'].includes(text) || text === '–ù–∞–∑–∞–¥') {
    await ctx.reply('–ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã.', await getMainMenuUser());
    return ctx.scene.leave();
  }
};

const profileScene = new Scenes.WizardScene<Scenes.WizardContext>(
  'profile',
  profileEnter,
  profileHandle,
  profileEdit,
  profileEditConfirm,
  profileDeleteConfirm,
  // –®–∞–≥ 5: —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –°–¥–µ–∫
  async (ctx: Scenes.WizardContext) => {
    if (!ctx.message || !('text' in ctx.message)) return;
    const text = (ctx.message.text || '').trim();
    const telegramId = ctx.from?.id ? String(ctx.from.id) : '';

    if (['–û—Ç–º–µ–Ω–∞', '‚úñÔ∏è –û—Ç–º–µ–Ω–∞'].includes(text) || text === '–ù–∞–∑–∞–¥') {
      await ctx.reply('–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.', await getMainMenuUser());
      return ctx.scene.leave();
    }

    if (!telegramId) {
      await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å Telegram ID.');
      return ctx.scene.leave();
    }

    if (!text) {
      await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∞–¥—Ä–µ—Å —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –û—Ç–º–µ–Ω–∞.', Markup.keyboard([[ '‚úñÔ∏è –û—Ç–º–µ–Ω–∞' ]]).resize());
      return; // –æ—Å—Ç–∞—ë–º—Å—è –Ω–∞ —Ç–µ–∫—É—â–µ–º —à–∞–≥–µ
    }

    const result = await ClientRepository.update(telegramId, { address: text });
    await ctx.reply(result.message, await getMainMenuUser());
    return ctx.scene.leave();
  }
  ,
  // –®–∞–≥ 6: –≤–≤–æ–¥ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
  async (ctx: Scenes.WizardContext) => {
    if (!ctx.message || !('text' in ctx.message)) return;
    const rawText = (ctx.message.text || '').trim();

    if (['–û—Ç–º–µ–Ω–∞', '‚úñÔ∏è –û—Ç–º–µ–Ω–∞'].includes(rawText) || rawText === '–ù–∞–∑–∞–¥') {
      await ctx.reply('–ò–∑–º–µ–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.', await getMainMenuUser());
      return ctx.scene.leave();
    }

    const parts = rawText.split('\n').map((s) => s.trim()).filter(Boolean);
    if (parts.length < 4) {
      await ctx.reply('–ù—É–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å 4 —Å—Ç—Ä–æ–∫–∏: –ò–ù–ù, –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ, –û–ì–†–ù, –Æ—Ä.–∞–¥—Ä–µ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.', Markup.keyboard([[ '‚úñÔ∏è –û—Ç–º–µ–Ω–∞' ]]).resize());
      return; // –æ—Å—Ç–∞—ë–º—Å—è –Ω–∞ —à–∞–≥–µ
    }

    const [org_inn, org_title, org_ogrn, org_address] = parts;
    // @ts-ignore
    ctx.wizard.state.org_inn = org_inn;
    // @ts-ignore
    ctx.wizard.state.org_title = org_title;
    // @ts-ignore
    ctx.wizard.state.org_ogrn = org_ogrn;
    // @ts-ignore
    ctx.wizard.state.org_address = org_address;

    await ctx.reply(
      `–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:\n–ò–ù–ù: ${org_inn}\n–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ: ${org_title}\n–û–ì–†–ù: ${org_ogrn}\n–Æ—Ä.–∞–¥—Ä–µ—Å: ${org_address}\n\n–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è?`,
      Markup.keyboard([[ 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å', '‚úñÔ∏è –û—Ç–º–µ–Ω–∞' ]]).resize()
    );
    // @ts-ignore
    ctx.wizard.selectStep(7);
  }
  ,
  // –®–∞–≥ 7: –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
  async (ctx: Scenes.WizardContext) => {
    if (!ctx.message || !('text' in ctx.message)) return;
    const text = ctx.message.text;
    const telegramId = ctx.from?.id ? String(ctx.from.id) : '';

    if (text === '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å' || text === 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å') {
      // @ts-ignore
      const org_inn = ctx.wizard.state.org_inn as string;
      // @ts-ignore
      const org_title = ctx.wizard.state.org_title as string;
      // @ts-ignore
      const org_ogrn = ctx.wizard.state.org_ogrn as string;
      // @ts-ignore
      const org_address = ctx.wizard.state.org_address as string;
      const result = await ClientRepository.update(telegramId, { org_inn, org_title, org_ogrn, org_address });
      await ctx.reply(result.message, await getMainMenuUser());
      return ctx.scene.leave();
    }

    if (['–û—Ç–º–µ–Ω–∞', '‚úñÔ∏è –û—Ç–º–µ–Ω–∞'].includes(text) || text === '–ù–∞–∑–∞–¥') {
      await ctx.reply('–ò–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω—ã.', await getMainMenuUser());
      return ctx.scene.leave();
    }
  }
);

export default profileScene;


